{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "produce_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timeLimit_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requiredVotesToReject_",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "OrderFailed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum GroupOrder.State",
						"name": "state",
						"type": "uint8"
					}
				],
				"name": "OrderStateUpdate",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "acceptOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "groupOrderHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumTimeLimit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "placeOrder",
				"outputs": [
					{
						"internalType": "bool",
						"name": "orderplaced",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "portionsAgreed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "portionsPerPerson",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "produce",
				"outputs": [
					{
						"internalType": "contract Produce",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rejectOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requiredVotesToReject",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum GroupOrder.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timeOutGroupOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "voteToReject",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "votesToReject",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"placeOrder()": {
					"notice": "One person gets one order to ensure equal economic participation"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/GroupOrder.sol": "GroupOrder"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/proxy/Clones.sol": {
			"keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
			"license": "MIT",
			"urls": [
				"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
				"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/GroupOrder.sol": {
			"keccak256": "0xb3bbd509c912ce64317afb0873ef9ba64a12bd425c3d02aad6b2bd992982e53a",
			"license": "UNLICENSD",
			"urls": [
				"bzz-raw://8ffba370c6616feaded79e236b7efe447c673acc96fe46a306ceee5dbf679895",
				"dweb:/ipfs/QmNV9dkDLLJ4Mq8iPv2NJ8iN4bgDYFX8CT3pjM3sVsUPXj"
			]
		},
		"contracts/Market.sol": {
			"keccak256": "0xe6c239a2e8421f9fb51a16271c0e57e14336ac42a11b35ffc1dadcdbc67b6be5",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://5d31cc6b486d6047839dac6902fc2f8cea95863afba0b27849c27d37321615ee",
				"dweb:/ipfs/QmVTgHHBYtJCQKjqsfWBvj1KQZNF9QoFJwtSjLGoNFWngp"
			]
		},
		"contracts/Produce.sol": {
			"keccak256": "0x02a2cd4f7281734d1878aa0d0c0ce55f50118a80c35b4c71e59e1e57ff687048",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://77779800b70f8f3932394a8c91e4cea6ad5411a600b2ef06bca5f7a0edddd0de",
				"dweb:/ipfs/QmSfBEA8Xk8RAvDUXahTPi9MiUeVvkotxGm991KFGgduSf"
			]
		}
	},
	"version": 1
}